[tool.poetry]
name = "kickstarter-mlops"
version = "0.1.0"
description = "Prediction of success in Kickstarter projects. Final MLOps zoomcamp project"
authors = ["Javier Garcia Bautista <M3cHr3p71l@gmail.com>"]
readme = "README.md"
repository = "https://github.com/BoKatanKrize/kickstarter-mlops.git"
packages = [
    { include = "data", from = "src" },
    { include = "features", from = "src" },
    { include = "models", from = "src" },
    { include = "orchestration", from = "src" },
    { include = "utils", from = "src" },
    { include = "deployment", from = "src" },
]


[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.2"
pandas = "^2.0.3"
numpy = "^1.25.2"
python-dotenv = "^1.0.0"
click = "^8.1.6"
gitpython = "^3.1.32"
pyarrow = "^12.0.1"
boto3 = "^1.28.20"
cryptography = "38.0.4"
scikit-learn = "^1.3.0"
wandb = "^0.15.8"
xgboost = "^1.7.6"
lightgbm = "^4.0.0"
prefect = "^2.11.3"
flask = "^2.3.2"

[tool.poetry.scripts]
downloader = "data.downloader:wrapper_poetry"
cleaner = "data.cleaner:wrapper_poetry"
build_features = "features.build_features:wrapper_poetry"
train = "models.train:wrapper_poetry"
register_model = "models.register_model:wrapper_poetry"

[tool.poe.tasks]

  [tool.poe.tasks.launch-localstack-s3]
  cmd = "docker compose up -d localstack"

  [tool.poe.tasks.setup-orchestration]
  envfile = ".env"
  sequence = [
    { cmd = "prefect init --recipe git" },
    { cmd = "prefect work-pool create --type process ${WORKPOOL_NAME}" },
    { cmd = "prefect deploy ${FLOW_ENTRYPOINT} -n ${DEPLOY_NAME} -p ${WORKPOOL_NAME}" },
    { shell = "prefect worker start --pool ${WORKPOOL_NAME}" }
  ]
  ignore_fail = "return_non_zero"

  [tool.poe.tasks.launch-orchestration]
  envfile = ".env"
  sequence = [
     { ref = "launch-localstack-s3" },
     { cmd = "prefect deployment run '${FLOW_NAME}/${DEPLOY_NAME}'" }
  ]

  [tool.poe.tasks.launch-flask-app]
  cmd = "docker compose up --build -d flask-app"

  [tool.poe.tasks.predict-flask-app]
  cmd = "poetry run python test.py"
  cwd = "./src/deployment/web_service"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
